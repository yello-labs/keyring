plugins {
    id 'java-library'
    id "com.diffplug.spotless" version "5.9.0"
    id "com.gradle.plugin-publish" version "0.12.0"
    id 'java-gradle-plugin'
}

group 'org.yellolab'
version '0.1.0'

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
    withJavadocJar()
}

sourceSets.main.resources {
    srcDir "src/main/resources"
    srcDir "keyring-jni/target/release"
    include "libkeyring_jni**"
}

dependencies {
    testImplementation 'org.testng:testng:6.10'
}

task cargoBuild(type: Exec) {
    workingDir './keyring-jni/'
    def build_command = ['cargo', 'build', '-Z', 'unstable-options', '--release', '--out-dir' , 'cargo_out']
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', build_command
    } else {
        commandLine build_command
    }
}

task getLibFromRust(type: Copy) {
    from('keyring-jni/cargo_out/') {
        include 'libkeyring_jni*'
    }
    into 'src/main/resources/'
}

test {
    useTestNG()
    failFast = false
}

compileJava {
    dependsOn getLibFromRust
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        googleJavaFormat('1.7')
    }
}

pluginBundle {
    website = 'https://github.com/yellolab/keyring'
    vcsUrl = 'https://github.com/yellolab/keyring.git'
    tags = ['keyring']
}

gradlePlugin {
    plugins {
        keyringLib {
            id = group + '.' + rootProject.name
            displayName = 'Keyring'
            description = 'Library for interacting with the Rust Keyring api'
            implementationClass = 'org.yellolab.Keyring'
        }
    }
}
